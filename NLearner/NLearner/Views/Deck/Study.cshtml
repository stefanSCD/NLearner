@model NLearner.ViewModels.StudyDeckViewModel
@using System.Text.Json;

@{
    ViewData["Title"] = $"Studiu: {Model.DeckName}";
    var cardsAsJson = JsonSerializer
    .Serialize(Model.Cards.Select(c => new { c.Front, c.Back }));
}

<style>
    .flashcard-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin-top: 2rem;
    }

    .flashcard {
        width: 600px;
        height: 300px;
        border: 1px solid #ccc;
        border-radius: 8px;
        padding: 20px;
        display: flex;
        justify-content: center;
        align-items: center;
        text-align: center;
        font-size: 1.5rem;
        position: relative;
    }

    #card-back {
        display: none;
        color: #0056b3;
        font-weight: bold;
    }

    .card-controls {
        margin-top: 20px;
    }
</style>

<div class="flashcard-container">

    <div class="d-flex justify-content-between w-100 mb-3" style="max-width: 600px;">
        <h3>@Model.DeckName</h3>
        <a asp-controller="Deck" asp-action="Deck"
           asp-route-projectId="@Model.ProjectId"
           asp-route-id="@Model.DeckId"
           class="btn btn-outline-secondary">Back to Deck</a>
    </div>

    <div class="flashcard shadow-sm">
        <div id="card-front">Întrebare...</div>
        <div id="card-back">Răspuns...</div>
    </div>

    <div id="card-progress" class="text-muted mt-2">Card 1 / @Model.Cards.Count</div>

    <div class="card-controls">
        <button id="prev-card-btn" class="btn btn-secondary">Previous</button>
        <button id="show-answer-btn" class="btn btn-primary btn-lg mx-3">Show Answer</button>
        <button id="next-card-btn" class="btn btn-secondary">Next</button>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {

            const cards = @Html.Raw(cardsAsJson);
            let currentIndex = 0;
            let isFlipped = false;

            const cardFront = document.getElementById("card-front");
            const cardBack = document.getElementById("card-back");
            const cardProgress = document.getElementById("card-progress");

            const showAnswerBtn = document.getElementById("show-answer-btn");
            const prevBtn = document.getElementById("prev-card-btn");
            const nextBtn = document.getElementById("next-card-btn");

            function showCard(index) {
                if (cards.length === 0) {
                    cardFront.innerText = "This deck has no cards!";
                    return;
                }

                const card = cards[index];
                cardFront.innerText = card.Front;
                cardBack.innerText = card.Back;

                cardBack.style.display = "none";
                cardFront.style.display = "block";
                isFlipped = false;
                showAnswerBtn.innerText = "Show Answer";

                cardProgress.innerText = `Card ${index + 1} / ${cards.length}`;

                prevBtn.disabled = (index === 0);
                nextBtn.disabled = (index === cards.length - 1);
            }

            function flipCard() {
                isFlipped = !isFlipped;
                if (isFlipped) {
                    cardFront.style.display = "none";
                    cardBack.style.display = "block";
                    showAnswerBtn.innerText = "Hide Answer";
                } else {
                    cardBack.style.display = "none";
                    cardFront.style.display = "block";
                    showAnswerBtn.innerText = "Show Answer";
                }
            }

            showAnswerBtn.addEventListener("click", flipCard);

            nextBtn.addEventListener("click", () => {
                if (currentIndex < cards.length - 1) {
                    currentIndex++;
                    showCard(currentIndex);
                }
            });

            prevBtn.addEventListener("click", () => {
                if (currentIndex > 0) {
                    currentIndex--;
                    showCard(currentIndex);
                }
            });

            showCard(0);
        });
    </script>
}